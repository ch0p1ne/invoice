<UserControl x:Class="invoice.Views.ListExamenView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:invoice.Utilities.Converters"
             xmlns:viewModel="clr-namespace:invoice.ViewModels" xmlns:behevior="http://schemas.microsoft.com/xaml/behaviors"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        <local:TrueOrFalseToVisibility x:Key="TrueOrFalseToVisibility" />
    </UserControl.Resources>

    <Grid>
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0" Visibility="{Binding IsVisible, Converter={StaticResource TrueOrFalseToVisibility}}">
                <StackPanel VerticalAlignment="Center" 
                            HorizontalAlignment="Center"
                            DataContext="{Binding SelectedItem, ElementName=listDataGrid}">
                    <WrapPanel Orientation="Vertical" Margin="0,0,0,30">
                        <Label >Nom De l'acte</Label>
                        <TextBox x:Name="txtExamenName"  Width="270" Text="{Binding ExamenName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Padding="10,5" IsReadOnly="{Binding DataContext.IsEditable,
                      ElementName=ExamenControl}" />
                    </WrapPanel>
                    <WrapPanel Orientation="Vertical" Margin="0,0,0,30">
                        <Label >Reférence</Label>
                        <TextBox x:Name="txtReference" Width="130" Text="{Binding Reference, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Padding="10,5" IsReadOnly="{Binding DataContext.IsEditable,
                      ElementName=ExamenControl}"/>
                    </WrapPanel>
                    <WrapPanel Orientation="Vertical">
                        <Label >Prix à l'unité</Label>
                        <TextBox x:Name="txtPrice"  MinWidth="100" MaxWidth="150" Text="{Binding Price, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:C}}" Padding="10,5" IsReadOnly="{Binding DataContext.IsEditable,
                      ElementName=ExamenControl}"/>
                    </WrapPanel>
                    <StackPanel.Resources>
                        <Style TargetType="Label">
                            <Setter Property="Foreground" Value="#202020" />
                            <Setter Property="FontWeight" Value="SemiBold" />
                            <Setter Property="FontSize" Value="16" />
                            <Setter Property="Margin" Value="0,0,0,5" />
                        </Style>
                        <Style TargetType="TextBox">
                            <Setter Property="Background" Value="#fdfffc" />
                            <Setter Property="BorderThickness" Value="0,0,0,2" />
                            <Setter Property="BorderBrush" Value="#2ec4b6" />
                            <Setter Property="FontWeight" Value="Bold" />
                            <Setter Property="FontSize" Value="15" />
                        </Style>
                    </StackPanel.Resources>

                </StackPanel>
                <WrapPanel VerticalAlignment="Bottom" 
                            HorizontalAlignment="Right"
                           Margin="0,0,0,50"
                            >
                    <Button Style="{StaticResource buttonCrudStyle}" 
                            Content="Annuler"
                            Background="#D9D9D9"
                            Foreground="White"
                            >

                        <!--<behevior:Interaction.Triggers>
                            <behevior:EventTrigger EventName="Click">
                                <behevior:InvokeCommandAction Command="{Binding ModifierCommand}" />
                            </behevior:EventTrigger>
                        </behevior:Interaction.Triggers>-->
                    </Button>
                    <Button Style="{StaticResource buttonCrudStyle}"
                            Content="Modifier"
                            Background="#008A38"
                            Foreground="White"
                            >

                        <!--<behevior:Interaction.Triggers>
                            <behevior:EventTrigger EventName="Click">
                                <behevior:InvokeCommandAction Command="{Binding ModifierCommand}" />
                            </behevior:EventTrigger>
                        </behevior:Interaction.Triggers>-->
                    </Button>
                </WrapPanel>
            </Grid>

            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="5*" />
                </Grid.RowDefinitions>


                <WrapPanel Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,0,5">
                    <TextBlock Focusable="False"
                               FontWeight="SemiBold"
                               Foreground="DarkKhaki" 
                               Text="Actes d'examen"
                               FontSize="20"/>
                </WrapPanel>
                <DataGrid x:Name="listDataGrid"
                          Grid.Row="1"
                          Background="Transparent"
                          AutoGenerateColumns="False"
                          ItemsSource="{Binding Examens}"
                          HorizontalAlignment="Stretch"
                          MinRowHeight="30"
                          BorderThickness="0"
                          IsReadOnly="True"
                          CanUserAddRows="False"
                          CanUserDeleteRows="False"
                          SelectionMode="Single"
                          HeadersVisibility="Column" 
                          
                          Margin="10">
                    <behevior:Interaction.Triggers>
                        <behevior:EventTrigger EventName="SelectionChanged">
                            <behevior:InvokeCommandAction Command="{Binding ChangeVisibilityCommand}" />
                        </behevior:EventTrigger>
                    </behevior:Interaction.Triggers>

                    <DataGrid.Style>
                        <Style TargetType="DataGrid">
                            <Setter Property="RowBackground" Value="#F3F3F3"/>
                            <Setter Property="AlternatingRowBackground" Value="#F0F0F0"/>
                            <Setter Property="GridLinesVisibility" Value="None"/>
                            <Setter Property="HorizontalScrollBarVisibility" Value="Visible"/>
                        </Style>
                    </DataGrid.Style>

                    <!-- Style pour centrer verticalement le contenu des TextBlock dans les cellules -->
                    <DataGrid.Resources>
                        <Style x:Key="CenteredTextBlock" TargetType="TextBlock">
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="FontWeight" Value="Normal"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="Margin" Value="10,0,0,2" />
                        </Style>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                            <Setter Property="MinHeight" Value="30"/>
                            <Setter Property="Padding" Value="4,2"/>
                        </Style>
                    </DataGrid.Resources>

                    <DataGrid.RowStyle>
                        <Style TargetType="DataGridRow">
                            <Setter Property="MinHeight" Value="40 "/>
                            <Setter Property="Padding" Value="4,2"/>
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="#e5f65D" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.RowStyle>

                    <!-- CellStyle pour centrer verticalement le contenu de chaque cellule -->
                    <DataGrid.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                            <Setter Property="FontSize" Value="12"/>
                            <Setter Property="FontWeight" Value="Normal"/>
                        </Style>
                    </DataGrid.CellStyle>

                    <DataGrid.Columns>

                        <DataGridTextColumn Width="4*" Header="Acte d'examen" Binding="{Binding ExamenName}" ElementStyle="{StaticResource CenteredTextBlock}" FontWeight="Bold" />
                        <DataGridTextColumn Width="1*" Header="Reference" Binding="{Binding Reference}" ElementStyle="{StaticResource CenteredTextBlock}" />
                        <DataGridTextColumn Width="2*" 
                                            Header="Prix" 
                                            Binding="{Binding Price, StringFormat={}{0:C}}"
                                            ElementStyle="{StaticResource CenteredTextBlock}" />

                    </DataGrid.Columns>

                </DataGrid>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
